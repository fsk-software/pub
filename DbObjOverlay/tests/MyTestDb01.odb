#--Simple, unlikely, single field tables with primary keys
#-- of varying supported data types
dbclass MyRecord001
  int val01 as key;
end;

dbclass MyRecord002
  float val01 as key;
end;

dbclass MyRecord003
  double val01 as key;
end;

dbclass MyRecord005
  char val01 as key;
end;

dbclass MyRecord007
  char(10) val01 as key;
end;

dbclass MyRecord008
  char(20) val01 as key;
end;

dbclass MyRecord009
  char(33) val01 as key;
end;

dbclass MyRecord010
  char(10) val01 as key;
end;

#--Simple one-primary key, one non-primary key
dbclass MyRecord101
  int val01 as key;
  float val02;
end;

dbclass MyRecord102
  int val01 as key;
  bigint val02;
end;

dbclass MyRecord103
  int val01 as key;
  text val02;
end;

dbclass MyRecord104
  int val01 as key;
  int val02;
end;

dbclass MyRecord105
  int val01 as key;
  long val02;
end;

dbclass MyRecord106
  int val01 as key;
  double val02;
end;

#--Single table with variety of supported data types
dbclass MyRecord201
  int val01 as key;
  float val02;
  bigint val03;
  text val04;
  int val05;
  long val06;
  double val07;
end;

#--Duplicate uses of same datatype
dbclass MyRecord201
  int val01 as key;
  char(11) val02;
  char(11) val03;
end;

#--Variety of user-defined data types
dbclass MyRecord301
  int val01 as key;
  char(11) val02;
  char(22) val03;
  char(33) val04;
  char(44) val05;
  char(55) val06;
  char(66) val07;
  char(11) val12;
  char(22) val13;
  char(33) val14;
  char(44) val15;
  char(55) val16;
  char(66) val17;
end;

#--test non-first primary key
dbclass MyRecord401
  text val01;
  int val02 as key;
end;
